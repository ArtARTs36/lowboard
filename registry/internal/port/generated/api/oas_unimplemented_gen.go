// Code generated by ogen, DO NOT EDIT.

package api

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// ApisApiIdDelete implements DELETE /apis/{apiId} operation.
//
// Delete an API by its ID.
//
// DELETE /apis/{apiId}
func (UnimplementedHandler) ApisApiIdDelete(ctx context.Context, params ApisApiIdDeleteParams) error {
	return ht.ErrNotImplemented
}

// ApisApiIdGet implements GET /apis/{apiId} operation.
//
// Retrieve details about a specific API.
//
// GET /apis/{apiId}
func (UnimplementedHandler) ApisApiIdGet(ctx context.Context, params ApisApiIdGetParams) (r *API, _ error) {
	return r, ht.ErrNotImplemented
}

// ApisApiIdPut implements PUT /apis/{apiId} operation.
//
// Update an existing API.
//
// PUT /apis/{apiId}
func (UnimplementedHandler) ApisApiIdPut(ctx context.Context, req *ApiUpdate, params ApisApiIdPutParams) (r *API, _ error) {
	return r, ht.ErrNotImplemented
}

// ApisGet implements GET /apis operation.
//
// Get list of all APIs.
//
// GET /apis
func (UnimplementedHandler) ApisGet(ctx context.Context) (r []API, _ error) {
	return r, ht.ErrNotImplemented
}

// ApisPost implements POST /apis operation.
//
// Create a new API.
//
// POST /apis
func (UnimplementedHandler) ApisPost(ctx context.Context, req *ApiCreate) (r *API, _ error) {
	return r, ht.ErrNotImplemented
}

// ComponentsComponentNameDelete implements DELETE /components/{componentName} operation.
//
// Delete a component by its name.
//
// DELETE /components/{componentName}
func (UnimplementedHandler) ComponentsComponentNameDelete(ctx context.Context, params ComponentsComponentNameDeleteParams) error {
	return ht.ErrNotImplemented
}

// ComponentsComponentNamePut implements PUT /components/{componentName} operation.
//
// Update an existing component.
//
// PUT /components/{componentName}
func (UnimplementedHandler) ComponentsComponentNamePut(ctx context.Context, req *ComponentUpdate, params ComponentsComponentNamePutParams) (r *Component, _ error) {
	return r, ht.ErrNotImplemented
}

// ComponentsGet implements GET /components operation.
//
// Get list of all components.
//
// GET /components
func (UnimplementedHandler) ComponentsGet(ctx context.Context) (r []Component, _ error) {
	return r, ht.ErrNotImplemented
}

// ComponentsPost implements POST /components operation.
//
// Create a new component.
//
// POST /components
func (UnimplementedHandler) ComponentsPost(ctx context.Context, req *ComponentCreate) (r *Component, _ error) {
	return r, ht.ErrNotImplemented
}

// DeletePage implements DeletePage operation.
//
// Delete a page by its name.
//
// DELETE /pages/{pageName}
func (UnimplementedHandler) DeletePage(ctx context.Context, params DeletePageParams) error {
	return ht.ErrNotImplemented
}

// DeletePageComponent implements DeletePageComponent operation.
//
// Delete a page component by its ID.
//
// DELETE /page-components/{componentId}
func (UnimplementedHandler) DeletePageComponent(ctx context.Context, params DeletePageComponentParams) error {
	return ht.ErrNotImplemented
}

// GetComponent implements GetComponent operation.
//
// Retrieve details about a specific component.
//
// GET /components/{componentName}
func (UnimplementedHandler) GetComponent(ctx context.Context, params GetComponentParams) (r *Component, _ error) {
	return r, ht.ErrNotImplemented
}

// GetDefinition implements GetDefinition operation.
//
// Get Config.
//
// GET /definition
func (UnimplementedHandler) GetDefinition(ctx context.Context) (r *Definition, _ error) {
	return r, ht.ErrNotImplemented
}

// GetPageComponent implements GetPageComponent operation.
//
// Retrieve details about a specific page component.
//
// GET /page-components/{componentId}
func (UnimplementedHandler) GetPageComponent(ctx context.Context, params GetPageComponentParams) (r *PageComponent, _ error) {
	return r, ht.ErrNotImplemented
}

// ListPageComponents implements ListPageComponents operation.
//
// Get list of all page components.
//
// GET /page-components
func (UnimplementedHandler) ListPageComponents(ctx context.Context) (r []PageComponent, _ error) {
	return r, ht.ErrNotImplemented
}

// PageComponentsPost implements POST /page-components operation.
//
// Create a new page component.
//
// POST /page-components
func (UnimplementedHandler) PageComponentsPost(ctx context.Context, req *PageComponentCreate) (r *PageComponent, _ error) {
	return r, ht.ErrNotImplemented
}

// PagesGet implements GET /pages operation.
//
// Get list of all pages.
//
// GET /pages
func (UnimplementedHandler) PagesGet(ctx context.Context) (r []Page, _ error) {
	return r, ht.ErrNotImplemented
}

// PagesPageNameGet implements GET /pages/{pageName} operation.
//
// Retrieve details about a specific page.
//
// GET /pages/{pageName}
func (UnimplementedHandler) PagesPageNameGet(ctx context.Context, params PagesPageNameGetParams) (r *Page, _ error) {
	return r, ht.ErrNotImplemented
}

// PagesPageNamePut implements PUT /pages/{pageName} operation.
//
// Update an existing page.
//
// PUT /pages/{pageName}
func (UnimplementedHandler) PagesPageNamePut(ctx context.Context, req *PageUpdate, params PagesPageNamePutParams) (r *Page, _ error) {
	return r, ht.ErrNotImplemented
}

// PagesPost implements POST /pages operation.
//
// Create a new page.
//
// POST /pages
func (UnimplementedHandler) PagesPost(ctx context.Context, req *PageCreate) (r *Page, _ error) {
	return r, ht.ErrNotImplemented
}

// PutPageComponent implements PutPageComponent operation.
//
// Update an existing page component.
//
// PUT /page-components/{componentId}
func (UnimplementedHandler) PutPageComponent(ctx context.Context, req *PageComponentUpdate, params PutPageComponentParams) (r *PageComponent, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarLinksGet implements GET /sidebar-links operation.
//
// Get list of all sidebar links.
//
// GET /sidebar-links
func (UnimplementedHandler) SidebarLinksGet(ctx context.Context) (r []SidebarLink, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarLinksLinkIdDelete implements DELETE /sidebar-links/{linkId} operation.
//
// Delete a sidebar link by its ID.
//
// DELETE /sidebar-links/{linkId}
func (UnimplementedHandler) SidebarLinksLinkIdDelete(ctx context.Context, params SidebarLinksLinkIdDeleteParams) error {
	return ht.ErrNotImplemented
}

// SidebarLinksLinkIdGet implements GET /sidebar-links/{linkId} operation.
//
// Retrieve details about a specific sidebar link.
//
// GET /sidebar-links/{linkId}
func (UnimplementedHandler) SidebarLinksLinkIdGet(ctx context.Context, params SidebarLinksLinkIdGetParams) (r *SidebarLink, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarLinksLinkIdPut implements PUT /sidebar-links/{linkId} operation.
//
// Update an existing sidebar link.
//
// PUT /sidebar-links/{linkId}
func (UnimplementedHandler) SidebarLinksLinkIdPut(ctx context.Context, req *SidebarLinkUpdate, params SidebarLinksLinkIdPutParams) (r *SidebarLink, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarLinksPost implements POST /sidebar-links operation.
//
// Create a new sidebar link.
//
// POST /sidebar-links
func (UnimplementedHandler) SidebarLinksPost(ctx context.Context, req *SidebarLinkCreate) (r *SidebarLink, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarsGet implements GET /sidebars operation.
//
// Get list of all sidebars.
//
// GET /sidebars
func (UnimplementedHandler) SidebarsGet(ctx context.Context) (r []Sidebar, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarsPost implements POST /sidebars operation.
//
// Create a new sidebar.
//
// POST /sidebars
func (UnimplementedHandler) SidebarsPost(ctx context.Context, req *SidebarCreate) (r *Sidebar, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarsSidebarNameDelete implements DELETE /sidebars/{sidebarName} operation.
//
// Delete a sidebar by its name.
//
// DELETE /sidebars/{sidebarName}
func (UnimplementedHandler) SidebarsSidebarNameDelete(ctx context.Context, params SidebarsSidebarNameDeleteParams) error {
	return ht.ErrNotImplemented
}

// SidebarsSidebarNameGet implements GET /sidebars/{sidebarName} operation.
//
// Retrieve details about a specific sidebar.
//
// GET /sidebars/{sidebarName}
func (UnimplementedHandler) SidebarsSidebarNameGet(ctx context.Context, params SidebarsSidebarNameGetParams) (r *Sidebar, _ error) {
	return r, ht.ErrNotImplemented
}

// SidebarsSidebarNamePut implements PUT /sidebars/{sidebarName} operation.
//
// Update an existing sidebar.
//
// PUT /sidebars/{sidebarName}
func (UnimplementedHandler) SidebarsSidebarNamePut(ctx context.Context, req *SidebarUpdate, params SidebarsSidebarNamePutParams) (r *Sidebar, _ error) {
	return r, ht.ErrNotImplemented
}
