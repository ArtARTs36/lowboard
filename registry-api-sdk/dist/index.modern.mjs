import t from"isomorphic-unfetch";function n(){return n=Object.assign?Object.assign.bind():function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)({}).hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},n.apply(null,arguments)}class e{constructor(t){this.baseUrl=void 0,this.baseUrl=t.baseUrl}getDefinition(){return this.request("/definition")}async request(e,r){const s=`${this.baseUrl}${e}`,i=n({},r,{headers:{"Content-Type":"application/json"}});return t(s,i).then(t=>t.json()).then(t=>t)}}class r{constructor(t){this.client=void 0,this.client=new e(t)}}export{r as SDK};
